name: build & deploy dev
on:
  push:
    branches:
      - demo

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
      - uses: gradle/wrapper-validation-action@v1
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew
      - name: Running tests
        run: ./gradlew clean test
      - name: Upload test report artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: build/reports/*
          if-no-files-found: error

  build-jar:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
      - uses: gradle/wrapper-validation-action@v1
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew
      - name: Build fat jar
        run: ./gradlew clean shadowJar
      - name: Upload build artifact for next job
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: build/libs/app.jar
          if-no-files-found: error

  push-docker-image:
    runs-on: ubuntu-latest
    needs: [build-jar]
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifact from previous job
        uses: actions/download-artifact@v3
        with:
          name: jar
          path: build/libs/
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: dev-${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
